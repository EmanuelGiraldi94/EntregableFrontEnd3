{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emanu\\\\Desktop\\\\EntregableFrontEnd3\\\\entregable-frontend-3-Giraldi-Emanuel\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    id,\n    nombre,\n    descripcion,\n    stock,\n    sum\n  } = _ref;\n  const [cant, setCant] = React.useState(stock);\n\n  const setStock = () => {\n    setCant(cant - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cant > 0 ? cant : \"AGOTADO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setStock();\n        sum();\n      },\n      disabled: cant === 0,\n      children: [\" \", cant === 0 ? \"AGOTADO\" : \"COMPRAR\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, id + nombre, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"rcDBcX6bCoT2xYimFp/Wfubp0LU=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","Item","id","nombre","descripcion","stock","sum","cant","setCant","useState","setStock"],"sources":["C:/Users/emanu/Desktop/EntregableFrontEnd3/entregable-frontend-3-Giraldi-Emanuel/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\n\r\nimport React from \"react\";\r\n\r\n\r\n\r\nexport default function Item({id, nombre, descripcion, stock, sum}) {\r\n\r\n  const [cant, setCant] = React.useState(stock);\r\n  const setStock = () => {\r\n\r\n    setCant(cant -1);\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='producto' key ={id + nombre}>\r\n\r\n      {/* maquetar Item aquí */}\r\n\r\n      <h3>{nombre}</h3>\r\n      <p>{descripcion}</p>\r\n      <h5>En stock: \r\n        <span>{(cant > 0 ? cant : \"AGOTADO\")}</span>\r\n      </h5>\r\n\r\n    \r\n      <button onClick= {()=>{setStock(); sum()}} disabled={cant === 0}> {cant === 0 ? \"AGOTADO\" : \"COMPRAR\"}</button>\r\n\r\n\r\n    </div>\r\n  )\r\n}"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,eAAe,SAASC,IAAT,OAAqD;EAAA;;EAAA,IAAvC;IAACC,EAAD;IAAKC,MAAL;IAAaC,WAAb;IAA0BC,KAA1B;IAAiCC;EAAjC,CAAuC;EAElE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAeJ,KAAf,CAAxB;;EACA,MAAMK,QAAQ,GAAG,MAAM;IAErBF,OAAO,CAACD,IAAI,GAAE,CAAP,CAAP;EACD,CAHD;;EAKA,oBAEE;IAAK,SAAS,EAAC,UAAf;IAAA,wBAIE;MAAA,UAAKJ;IAAL;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAA,qCACE;QAAA,UAAQG,IAAI,GAAG,CAAP,GAAWA,IAAX,GAAkB;MAA1B;QAAA;QAAA;QAAA;MAAA,QADF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAWE;MAAQ,OAAO,EAAG,MAAI;QAACG,QAAQ;QAAIJ,GAAG;MAAG,CAAzC;MAA2C,QAAQ,EAAEC,IAAI,KAAK,CAA9D;MAAA,gBAAmEA,IAAI,KAAK,CAAT,GAAa,SAAb,GAAyB,SAA5F;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA,GAAgCL,EAAE,GAAGC,MAArC;IAAA;IAAA;IAAA;EAAA,QAFF;AAkBD;;GA1BuBF,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}