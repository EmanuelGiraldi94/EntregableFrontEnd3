{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emanu\\\\Desktop\\\\entregable-frontend-3-junio22-main\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n\n/*\r\nexport default function Item() {\r\n\r\n  return (\r\n    <div className='producto'>*/\n{\n  /* maquetar Item aquí */\n}\n/*   </div>\r\n )\r\n}\r\n*/\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    id,\n    nombre,\n    descripcion,\n    stock,\n    sum\n  } = _ref;\n  const [cant, setCant] = useState(stock);\n\n  const setStock = () => {\n    setCant(cant - 1);\n    sum();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"cant: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cant > 0 ? cant : \"AGOTADO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: cant === 0,\n      onClick: () => {\n        setStock();\n        sum();\n      },\n      children: cant === 0 ? \"AGOTADO\" : \"COMPRAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, id + nombre, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"rcDBcX6bCoT2xYimFp/Wfubp0LU=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","Item","id","nombre","descripcion","stock","sum","cant","setCant","setStock"],"sources":["C:/Users/emanu/Desktop/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\n\r\n/*\r\nexport default function Item() {\r\n\r\n  return (\r\n    <div className='producto'>*/\r\n      {/* maquetar Item aquí */}\r\n /*   </div>\r\n  )\r\n}\r\n*/\r\n\r\nimport { useState } from \"react\"\r\n\r\nexport default function Item({id, nombre, descripcion, stock, sum}) {\r\n  const [cant, setCant] = useState(stock);\r\n\r\n  const setStock = () => {\r\n    setCant(cant -1);\r\n    sum();\r\n\r\n  }\r\n  return (\r\n    <div className='producto' key ={id + nombre}>\r\n      {/* maquetar Item aquí */}\r\n      <h3>{nombre}</h3>\r\n      <p>{descripcion}</p>\r\n      <h5>cant: <span>{(cant > 0 ? cant : \"AGOTADO\")}</span></h5>\r\n\r\n    \r\n      <button disabled={cant === 0} onClick={() => {setStock();sum()}}>{cant === 0 ? \"AGOTADO\" : \"COMPRAR\"}</button>\r\n    </div>\r\n  )\r\n}"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACM;EAAC;AAAyB;AAC/B;AACD;AACA;AACA;;AAEA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,IAAT,OAAqD;EAAA;;EAAA,IAAvC;IAACC,EAAD;IAAKC,MAAL;IAAaC,WAAb;IAA0BC,KAA1B;IAAiCC;EAAjC,CAAuC;EAClE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACK,KAAD,CAAhC;;EAEA,MAAMI,QAAQ,GAAG,MAAM;IACrBD,OAAO,CAACD,IAAI,GAAE,CAAP,CAAP;IACAD,GAAG;EAEJ,CAJD;;EAKA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBAEE;MAAA,UAAKH;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,kCAAU;QAAA,UAAQG,IAAI,GAAG,CAAP,GAAWA,IAAX,GAAkB;MAA1B;QAAA;QAAA;QAAA;MAAA,QAAV;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE;MAAQ,QAAQ,EAAEA,IAAI,KAAK,CAA3B;MAA8B,OAAO,EAAE,MAAM;QAACE,QAAQ;QAAGH,GAAG;MAAG,CAA/D;MAAA,UAAkEC,IAAI,KAAK,CAAT,GAAa,SAAb,GAAyB;IAA3F;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,GAAgCL,EAAE,GAAGC,MAArC;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAnBuBF,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}