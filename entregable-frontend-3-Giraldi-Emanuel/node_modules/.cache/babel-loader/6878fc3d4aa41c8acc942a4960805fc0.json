{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emanu\\\\Desktop\\\\React\\\\entregable-frontend-3-junio22-main\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    id,\n    nombre,\n    descripcion,\n    stock\n  } = _ref;\n  const [cant, setCant] = useState(stock);\n\n  const setStock = () => {\n    setCant(cant - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"cantidad:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cantidad > 0 ? cantidad : \"AGOTADO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: cantidad === 0,\n      onClick: () => {\n        setStock();\n        adding();\n      },\n      children: cantidad === 0 ? \"AGOTADO\" : \"COMPRAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, is + nombre, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"rcDBcX6bCoT2xYimFp/Wfubp0LU=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","Item","id","nombre","descripcion","stock","cant","setCant","setStock","cantidad","adding","is"],"sources":["C:/Users/emanu/Desktop/React/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\n\r\n\r\nimport { useState } from \"react\"\r\n\r\n\r\nexport default function Item({id, nombre, descripcion, stock}) {\r\n\r\nconst [cant, setCant] = useState(stock);\r\n\r\nconst setStock = ()=>{\r\n\r\nsetCant(cant-1);\r\n\r\n}\r\n\r\n  return (\r\n    <div className='producto' key={is + nombre}>\r\n      {/* maquetar Item aquí */}\r\n\r\n      <h3>{nombre}</h3>\r\n      <p>{descripcion}</p>\r\n      <h5>cantidad: \r\n      <span>{(cantidad > 0 ? cantidad : \"AGOTADO\")}</span>\r\n      </h5>\r\n\r\n      <button disabled={cantidad === 0} onClick={() => {setStock();adding()}}>{cantidad === 0 ? \"AGOTADO\" : \"COMPRAR\"}</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SAASA,QAAT,QAAyB,OAAzB;;AAGA,eAAe,SAASC,IAAT,OAAgD;EAAA;;EAAA,IAAlC;IAACC,EAAD;IAAKC,MAAL;IAAaC,WAAb;IAA0BC;EAA1B,CAAkC;EAE/D,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACK,KAAD,CAAhC;;EAEA,MAAMG,QAAQ,GAAG,MAAI;IAErBD,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;EAEC,CAJD;;EAME,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBAGE;MAAA,UAAKH;IAAL;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,qCACA;QAAA,UAAQK,QAAQ,GAAG,CAAX,GAAeA,QAAf,GAA0B;MAAlC;QAAA;QAAA;QAAA;MAAA,QADA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eASE;MAAQ,QAAQ,EAAEA,QAAQ,KAAK,CAA/B;MAAkC,OAAO,EAAE,MAAM;QAACD,QAAQ;QAAGE,MAAM;MAAG,CAAtE;MAAA,UAAyED,QAAQ,KAAK,CAAb,GAAiB,SAAjB,GAA6B;IAAtG;MAAA;MAAA;MAAA;IAAA,QATF;EAAA,GAA+BE,EAAE,GAAGR,MAApC;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAvBuBF,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}